import Vue from 'vue'
import Router from 'vue-router'
import Axios from 'axios'
import Home from '../components/Home/index.vue'
Vue.use(Router)
Vue.prototype.$axios = Axios
/* Layout */
import Layout from '@/layout'

/**
 * Note: 路由配置项
 *
 * hidden: true                   // 当设置 true 的时候该路由不会再侧边栏出现 如401，login等页面，或者如一些编辑页面/edit/1
 * alwaysShow: true               // 当你一个路由下面的 children 声明的路由大于1个时，自动会变成嵌套的模式--如组件页面
 *                                // 只有一个时，会将那个子路由当做根路由显示在侧边栏--如引导页面
 *                                // 若你想不管路由下面的 children 声明的个数都显示你的根路由
 *                                // 你可以设置 alwaysShow: true，这样它就会忽略之前定义的规则，一直显示根路由
 * redirect: noRedirect           // 当设置 noRedirect 的时候该路由在面包屑导航中不可被点击
 * name:'router-name'             // 设定路由的名字，一定要填写不然使用<keep-alive>时会出现各种问题
 * meta : {
	roles: ['admin','editor']    // 设置该路由进入的权限，支持多个权限叠加
	title: 'title'               // 设置该路由在侧边栏和面包屑中展示的名字
	icon: 'svg-name'             // 设置该路由的图标，对应路径src/icons/svg
	breadcrumb: false            // 如果设置为false，则不会在breadcrumb面包屑中显示
  }
 */

// 公共路由
export const constantRoutes = [
	{
		path: '/redirect',
		component: Layout,
		hidden: true,
		children: [
			{
				path: '/redirect/:path(.*)',
				component: (resolve) => require(['@/views/redirect'], resolve)
			}
		]
	},

 {
     path: '/login',
     name:'login',
     component: (resolve) => require(['@/views/login'], resolve),
     hidden: true
   },
    {
    path: '/404',
    component: (resolve) => require(['@/views/error/404'], resolve),
    hidden: true
  },
  {
    path: '/401',
    component: (resolve) => require(['@/views/error/401'], resolve),
    hidden: true
  },
  {
      path: '/dict',
      component: Layout,
      hidden: true,
      children: [
        {
          path: 'type/data/:dictId(\\d+)',
          component: (resolve) => require(['@/views/system/dict/data'], resolve),
          name: 'Data',
          meta: { title: '字典数据', icon: '' }
        }
      ]
    },
{
 	// 首页
 	path: '/',
 	name: 'home',
  component: Layout,
 	component: () => import('../components/Home/index.vue'),
 	redirect:'/home/header',
 	children: [{
 		// 首页头部组件
 		path: '/home/header',
 		name: 'header',
 		component: () => import('../components/header/index.vue'),
    meta: { title: '功能导航',noCache: false, affix: false},
 		redirect:'/navigation',
 		children: [{
 			// 功能导航组件
 			path: '/navigation',
 			name: 'navigation',
 			component: () => import('../views/system/navigation/index.vue'),
      meta: { title: '功能导航',noCache: true, affix: true},
 		},
    // 常用功能
 		{
 			// 消息中心组件页面
 			path:'/header/message',
 			name:'message',
      component: Layout,
      meta: { title: '消息中心',noCache: true, affix: true},
 			component: () => import('../views/system/message/index.vue')
 		},
 		{
 		 // 用户管理组件
 		 path:'/system/user/index',
 		 name:'user',
		 meta: { title: '用户管理'},
 		 component:()=> import('../views/system/user/index.vue')
 		},
 		{
 		 // 角色管理组件
 		 path:'/system/role/index',
 		 name:'role',
		 meta: { title: '角色管理'},
 		 component:()=> import('../views/system/role/index.vue')
 		},
 		{
 		 // 菜单管理组件页面
 		 path:'/system/menu/index',
 		 name:'menu',
		 meta: { title: '菜单管理'},
 		 component:()=> import('../views/system/menu/index.vue')
 		},
 		{
 		 // 部门管理组件页面
 		 path:'/system/dept/index',
 		 name:'dept',
		 meta: { title: '部门管理'},
 		 component:()=> import('../views/system/dept/index.vue')
 		},
 		{
 		 // 字典管理组件页面
 		 path:'/system/dict/index',
 		 name:'dict',
		 meta: { title: '字典管理'},
 		 component:()=> import('../views/system/dict/index.vue')
 		},
 		{
 		 // 岗位管理组件页面
 		 path:'/system/post/index',
 		 name:'post',
		 meta: { title: '岗位管理'},
 		 component:()=> import('../views/system/post/index.vue')
 		},
    {
      // 项目信息
         path:'/project/mes_project/index',
         name:'mes_project',
         meta:{title : '项目信息'},
         component:()=> import('../views/project/mes_project/index.vue')
       },
       {
         // 项目变更
            path:'/project/project_changefiles/index',
            name:'project_changefiles',
            meta:{title : '项目变更'},
            component:()=> import('../views/project/project_changefiles/index.vue')
          },
			]
		},
		],
	}


]

export default new Router({
	mode: 'history', // 去掉url中的#
	scrollBehavior: () => ({ y: 0 }),
	routes: constantRoutes
})
