<template>
	<div class="department">
		<div class="department_top">
			<ul v-show="show">
				<li @click="handleAdd" v-hasPermi="['system:dept:add']">新增</li>
				<li :class="{'notChoose' : single}" @click="handleUpdate" v-hasPermi="['system:dept:edit']">修改</li>
				<li :class="{'notChoose' : single}" @click="handleDelete" v-hasPermi="['system:dept:remove']">删除</li>
			</ul>
			<ul v-show="!show">
				<li @click="submitForm">保存</li>
				<li @click="cancel">取消</li>
			</ul>
		</div>
		<div class="department_conter">
          <div class="left" v-show="show">
                    <div class="head-container">
                      <el-tree :data="deptList"
                      :props="defaultProps"
                      :highlight-current="true"
                      :expand-on-click-node="false"
                      ref="tree"
                      @node-click="handleNodeClick" />
                    </div>
          </div>
          <div class="right" v-show="show">
              <el-form ref="intermediary" :model="intermediary"   label-width="84px" >
                       <el-row>
                         <el-col :span="24" style="width: 50%;">
                         <el-form-item label="上级部门:" prop="parentId">
                           <treeselect v-model="intermediary.parentId" :options="deptOptions" :normalizer="normalizer" placeholder="选择上级部门" />
                         </el-form-item>
                       </el-col>
                       </el-row>
                       <el-row>
                          <el-col :span="24" style="width: 50%;">
                         <el-form-item label="部门名称:" prop="deptName">
                           <el-input v-model="intermediary.deptName" placeholder="请输入部门名称" />
                         </el-form-item>
                       </el-col>
                       </el-row>
                      <el-row>
                        <el-col :span="24">
                         <el-form-item label="显示排序:" prop="orderNum">
                           <el-input-number v-model="intermediary.orderNum" controls-position="right" :min="0" />
                         </el-form-item>
                       </el-col>
                      </el-row>
                       <el-row>
                         <el-col :span="24" style="width: 50%;">
                         <el-form-item label="负责人:" prop="leader">
                           <el-input v-model="intermediary.leader" placeholder="请输入负责人" maxlength="20" />
                         </el-form-item>
                       </el-col>
                       </el-row>
                       <el-row>
                         <el-col :span="24" style="width: 50%;" >
                         <el-form-item label="联系电话:" prop="phone">
                           <el-input v-model="intermediary.phone" placeholder="请输入联系电话" maxlength="11" />
                         </el-form-item>
                       </el-col>
                       </el-row>
                       <el-row>
                         <el-col :span="24" style="width: 50%;">
                         <el-form-item label="邮箱:" prop="email">
                           <el-input v-model="intermediary.email" placeholder="请输入邮箱" maxlength="50" />
                         </el-form-item>
                       </el-col>
                       </el-row>
                       <el-row>
                         <el-col :span="24">
                         <el-form-item label="部门状态:">
                           <el-radio-group v-model="intermediary.status">
                             <el-radio
                               v-for="dict in statusOptions"
                               :key="dict.dictValue"
                               :label="dict.dictValue"
                             >{{dict.dictLabel}}</el-radio>
                           </el-radio-group>
                         </el-form-item>
                       </el-col>
                       </el-row>
                   </el-form>
          </div>
		  <el-form ref="form" :model="form" :rules="rules" label-width="100px" v-show="!show">
		        <el-row>
		           <el-col :span="24" v-if="form.parentId !== 0" style="width: 60%;">
		            <el-form-item label="上级部门:" prop="parentId">
		              <treeselect v-model="form.parentId" :options="deptOptions" :normalizer="normalizer" placeholder="选择上级部门" />
		            </el-form-item>
		          </el-col>
		        </el-row>
             <el-row>
                <el-col :span="24" style="width: 60%;">
		            <el-form-item label="部门名称:" prop="deptName">
		              <el-input v-model="form.deptName" placeholder="请输入部门名称" />
		            </el-form-item>
		          </el-col>
             </el-row>
               <el-row>
                 <el-col :span="24">
		            <el-form-item label="显示排序:" prop="orderNum">
		              <el-input-number v-model="form.orderNum" controls-position="right" :min="0" />
		            </el-form-item>
		          </el-col>
               </el-row>
		          <el-row>
		             <el-col :span="24" style="width: 60%;">
		            <el-form-item label="负责人:" prop="leader">
		              <el-input v-model="form.leader" placeholder="请输入负责人" maxlength="20" />
		            </el-form-item>
		          </el-col>
		          </el-row>
               <el-row>
                 <el-col :span="24" style="width: 60%;">
		            <el-form-item label="联系电话:" prop="phone">
		              <el-input v-model="form.phone" placeholder="请输入联系电话" maxlength="11" />
		            </el-form-item>
		          </el-col>
               </el-row>
		          <el-row>
		            <el-col :span="24" style="width: 60%;">
		            <el-form-item label="邮箱:" prop="email">
		              <el-input v-model="form.email" placeholder="请输入邮箱" maxlength="50" />
		            </el-form-item>
		          </el-col>
		          </el-row>
                <el-row>
                  <el-col :span="24">
		            <el-form-item label="部门状态:">
		              <el-radio-group v-model="form.status">
		                <el-radio
		                  v-for="dict in statusOptions"
		                  :key="dict.dictValue"
		                  :label="dict.dictValue"
		                >{{dict.dictLabel}}</el-radio>
		              </el-radio-group>
		            </el-form-item>
		          </el-col>
                </el-row>
		      </el-form>
    </div>
	</div>
</template>
<script>
 import { listDept, getDept, delDept, addDept, updateDept, listDeptExcludeChild } from "@/api/system/dept";
 import Treeselect from "@riophae/vue-treeselect";
 import "@riophae/vue-treeselect/dist/vue-treeselect.css";
	export default {
		name: 'department',
    components: { Treeselect },
		data() {
			return {
        single:true,
        show:true,
  // 遮罩层
        loading: true,
        // 显示搜索条件
        showSearch: true,
        // 表格树数据
        deptList: [],
        ids:'',
        // 部门树选项
        deptOptions: [],
        // 弹出层标题
        title: "",
        // 是否显示弹出层
        open: false,
        // 状态数据字典
        statusOptions: [],
        intermediary:{},
        // 查询参数
        queryParams: {
          deptName: undefined,
          status: undefined
        },
        // 表单参数
        form: {},
        defaultProps: {
                children: "children",
                label: "deptName",
              },
        // 表单校验
        rules: {
          parentId: [
            { required: true, message: "上级部门不能为空", trigger: "blur" }
          ],
          deptName: [
            { required: true, message: "部门名称不能为空", trigger: "blur" }
          ],
          orderNum: [
            { required: true, message: "菜单顺序不能为空", trigger: "blur" }
          ],
          email: [
            {
              type: "email",
              message: "'请输入正确的邮箱地址",
              trigger: ["blur", "change"]
            }
          ],
          phone: [
            {
              pattern: /^1[3|4|5|6|7|8|9][0-9]\d{8}$/,
              message: "请输入正确的手机号码",
              trigger: "blur"
            }
          ]
        }
			}
		},
      created() {
          this.getList();
              this.getDicts("sys_normal_disable").then(response => {
                this.statusOptions = response.data;
              });
        },
		methods: {
      // 表单重置
          reset() {
            this.form = {
              deptId: undefined,
              parentId: undefined,
              deptName: undefined,
              orderNum: undefined,
              leader: undefined,
              phone: undefined,
              email: undefined,
              status: "0"
            };
            this.resetForm("form");
          },
        /** 查询部门列表 */
           getList() {
             listDept(this.queryParams).then(response => {
               this.deptList = this.handleTree(response.data, "deptId");
                this.deptOptions = [];
                const dept = {
                  deptId: 0,
                  deptName: '主类目',
                  children: []
                };
                dept.children = this.handleTree(response.data, "deptId");
                this.deptOptions.push(dept);
             });
           },

           // 节点单击事件
               handleNodeClick(data) {
                 this.single = false
                 this.ids = data.deptId
                 // // listDept().then(response => {
                 // //    this.deptOptions = this.handleTree(response.data, "deptId");

                 // // });
                 this.queryParams.deptId = data.id;
                 // this.getList();
                 this.intermediary = data
                 this.form = data
               },
              // 字典状态字典翻译
                    statusFormat(row, column) {
                      return this.selectDictLabel(this.statusOptions, row.status);
                    },
                     /** 转换部门数据结构 */
                         normalizer(node) {
                           if (node.children && !node.children.length) {
                             delete node.children;
                           }
                           return {
                             id: node.deptId,
                             label: node.deptName,
                             children: node.children
                           };
                         },
                         /** 新增按钮操作 */
                             handleAdd(row) {
                               this.show = false
                               this.reset();
                               if (row != undefined) {
                                 this.form.parentId = row.deptId;
                               }
                               listDept().then(response => {
                         	        this.deptOptions = this.handleTree(response.data, "deptId");

                               });
                             },
                             /** 提交按钮 */
                                 submitForm: function() {
                                   this.$refs["form"].validate(valid => {
                                     if (valid) {
                                       if (this.form.deptId != undefined) {
                                         updateDept(this.form).then(response => {
                                           if (response.code === 200) {
                                             this.msgSuccess("修改成功");
                                             this.show = true
                                             this.getList();
                                           }
                                         });
                                       } else {
                                         addDept(this.form).then(response => {
                                           if (response.code === 200) {
                                             this.msgSuccess("新增成功");
                                             this.show = true
                                             this.getList();
                                           }
                                         });
                                       }
                                     }
                                   });
                                 },
                                 /** 修改按钮操作 */
                                     handleUpdate(row) {
                                       this.show = false
                                     },
                                 /** 删除按钮操作 */
                                     handleDelete(row) {
                                       const deptIds = row.deptId || this.ids;
                                       this.$confirm('是否确认删除名称为"' + this.intermediary.deptName + '"的数据项?', "警告", {
                                           confirmButtonText: "确定",
                                           cancelButtonText: "取消",
                                           type: "warning"
                                         }).then(function() {
                                           return delDept(deptIds);
                                         }).then(() => {
                                           this.getList();
                                           this.msgSuccess("删除成功");
                                         }).catch(function() {});
                                     },
                             // 取消按钮
                                 cancel() {
                                   this.reset();
                                   this.show = true
                                 }





		},
	}
</script>

<style scoped="scoped">
  /* 删除修改按钮是否操作 */
  .notChoose {
    opacity: 0.8;
    pointer-events: none;
  }
.department{
  width: 100%;
  height: 100%;
}
	.department_top {
		background-image: linear-gradient(#5692cf, #00356c);
		height: 40px;
		width: 100%;
		padding: 5px;
	}

	.department_top ul li {
		float: left;
		line-height: 28px;
		color: white;
		border: 1px solid #5681af;
		font-size: 12px;
		height: 28px;
		width: 58px;
		text-align: center;
		border-radius: 5px;
		background-image: linear-gradient(#71a1d2, #174f89);
		cursor: pointer;
	}

	.department_conter {
		background-color: #FFFFFF;
		width: 100%;
		height: 100%;
		border: 1px solid #c0c0c0;
		display: flex;
	}
  .left{
    width: 20%;
    height: 85%;
    border-right: 1px solid #d5d5d5;
    overflow: auto;
    padding-bottom: 60px;
  }
  .right{
    width: 80%;
    height: 100%;
  }
</style>
