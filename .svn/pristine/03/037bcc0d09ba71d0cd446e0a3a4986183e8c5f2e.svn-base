<template>
	<div class="roleManagement">
		<div class="roleManagement_top">
			<ul v-show="show">
				<li>新增</li>
				<li>修改</li>
				<li>删除</li>
        <li>导出</li>
			</ul>
			<ul v-show="!show">
				<li>保存</li>
				<li>取消</li>
			</ul>
		</div>
		<div class="roleManagement_conter">
      <div class="left" v-show="show">
      		<div class="message">
      			<div class="messagenav">
      				快速查询
      			</div>
      		</div>
          <el-form :model="queryParams" ref="queryForm"  :inline="true">
                <el-form-item label="角色名称" prop="roleName">
                  <el-input
                    v-model="queryParams.roleName"
                    placeholder="请输入角色名称"
                    clearable
                    size="small"
                    style="width: 240px"
                    @keyup.enter.native="handleQuery"
                  />
                </el-form-item>
                <el-form-item label="权限字符" prop="roleKey">
                  <el-input
                    v-model="queryParams.roleKey"
                    placeholder="请输入权限字符"
                    clearable
                    size="small"
                    style="width: 240px"
                    @keyup.enter.native="handleQuery"
                  />
                </el-form-item>
                <el-form-item label="状态" prop="status">
                  <el-select
                    v-model="queryParams.status"
                    placeholder="角色状态"
                    clearable
                    size="small"
                    style="width: 240px"
                  >
                    <el-option
                      v-for="dict in statusOptions"
                      :key="dict.dictValue"
                      :label="dict.dictLabel"
                      :value="dict.dictValue"
                    />
                  </el-select>
                </el-form-item>
                <el-form-item label="创建时间">
                  <el-date-picker
                    v-model="dateRange"
                    size="small"
                    style="width: 240px"
                    value-format="yyyy-MM-dd"
                    type="daterange"
                    range-separator="-"
                    start-placeholder="开始日期"
                    end-placeholder="结束日期"
                  ></el-date-picker>
                </el-form-item>
                <el-form-item>
                  <el-button type="cyan" icon="el-icon-search" size="mini" @click="handleQuery">搜索</el-button>
                  <el-button icon="el-icon-refresh" size="mini" @click="resetQuery">重置</el-button>
                </el-form-item>
              </el-form>
      </div>
			<div v-show="!show" class="contop">
			  <!-- <button @click="btnclick" type="button"><i class="el-icon-arrow-left"></i>返回</button> -->
			</div>
			<div class="conter_right">
        <div class="rigtop">
        	查询结果
        </div>
         <el-table  :data="roleList" @selection-change="handleSelectionChange">
                 <el-table-column type="selection" width="55" align="center" />
                 <el-table-column label="角色编号" prop="roleId" width="120" />
                 <el-table-column label="角色名称" prop="roleName" :show-overflow-tooltip="true" width="150" />
                 <el-table-column label="权限字符" prop="roleKey" :show-overflow-tooltip="true" width="150" />
                 <el-table-column label="显示顺序" prop="roleSort" width="100" />
                 <el-table-column label="状态" align="center" width="100">
                   <template slot-scope="scope">
                     <el-switch
                       v-model="scope.row.status"
                       active-value="0"
                       inactive-value="1"
                       @change="handleStatusChange(scope.row)"
                     ></el-switch>
                   </template>
                 </el-table-column>
                 <el-table-column label="创建时间" align="center" prop="createTime" width="180">
                   <template slot-scope="scope">
                     <span>{{ parseTime(scope.row.createTime) }}</span>
                   </template>
                 </el-table-column>
                 <el-table-column label="操作" align="center" class-name="small-padding fixed-width">
                   <template slot-scope="scope">
                     <el-button
                       size="mini"
                       type="text"
                       icon="el-icon-edit"
                       @click="handleUpdate(scope.row)"
                       v-hasPermi="['system:role:edit']"
                     >修改</el-button>
                     <el-button
                       size="mini"
                       type="text"
                       icon="el-icon-circle-check"
                       @click="handleDataScope(scope.row)"
                       v-hasPermi="['system:role:edit']"
                     >数据权限</el-button>
                     <el-button
                       size="mini"
                       type="text"
                       icon="el-icon-delete"
                       @click="handleDelete(scope.row)"
                       v-hasPermi="['system:role:remove']"
                     >删除</el-button>
                   </template>
                 </el-table-column>
               </el-table>
               <pagination
                     v-show="total>0"
                     :total="total"
                     :page.sync="queryParams.pageNum"
                     :limit.sync="queryParams.pageSize"
                     @pagination="getList"
                   />
			</div>
		</div>
	</div>
</template>

<script>
  import { listRole, getRole, delRole, addRole, updateRole, exportRole, dataScope, changeRoleStatus } from "@/api/system/role";
  import { treeselect as menuTreeselect, roleMenuTreeselect } from "@/api/system/menu";
  import { treeselect as deptTreeselect, roleDeptTreeselect } from "@/api/system/dept";


	 export default {
		 name:"roleManagement",
		 data(){
			 return{
         // 点击切换
         show:true,
           // 查询参数
               queryParams: {
                 pageNum: 1,
                 pageSize: 10,
                 roleName: undefined,
                 roleKey: undefined,
                 status: undefined
               },
 // 状态数据字典
      statusOptions: [],
       // 日期范围
            dateRange: [],
            // 角色表格数据
                  roleList: [],
                  // 总条数
                        total: 0,
                        // 表单参数
                              form: {},
                              defaultProps: {
                                children: "children",
                                label: "label"
                              },
                              // 表单校验
                                    rules: {
                                      roleName: [
                                        { required: true, message: "角色名称不能为空", trigger: "blur" }
                                      ],
                                      roleKey: [
                                        { required: true, message: "权限字符不能为空", trigger: "blur" }
                                      ],
                                      roleSort: [
                                        { required: true, message: "角色顺序不能为空", trigger: "blur" }
                                      ]
                                    }


			 }
		 },
		   watch: {

		     },
  created() {
    this.getList();
        this.getDicts("sys_normal_disable").then(response => {
          this.statusOptions = response.data;
        });
  },
		     methods: {
		       /** 查询角色列表 */
		           getList() {

		             listRole(this.addDateRange(this.queryParams, this.dateRange)).then(
		               response => {
		                 this.roleList = response.rows;
		                 this.total = response.total;

		               }
		             );
		           },
               // 表单重置
                   reset() {
                     if (this.$refs.menu != undefined) {
                       this.$refs.menu.setCheckedKeys([]);
                     }
                     this.form = {
                       roleId: undefined,
                       roleName: undefined,
                       roleKey: undefined,
                       roleSort: 0,
                       status: "0",
                       menuIds: [],
                       deptIds: [],
                       remark: undefined
                     };
                     this.resetForm("form");
                   },
               // 角色状态修改
                   handleStatusChange(row) {
                     let text = row.status === "0" ? "启用" : "停用";
                     this.$confirm('确认要"' + text + '""' + row.roleName + '"角色吗?', "警告", {
                         confirmButtonText: "确定",
                         cancelButtonText: "取消",
                         type: "warning"
                       }).then(function() {
                         return changeRoleStatus(row.roleId, row.status);
                       }).then(() => {
                         this.msgSuccess(text + "成功");
                       }).catch(function() {
                         row.status = row.status === "0" ? "1" : "0";
                       });
                   },
               /** 搜索按钮操作 */
                   handleQuery() {
                     this.queryParams.pageNum = 1;
                     this.getList();
                   },
                    /** 重置按钮操作 */
                       resetQuery() {
                         this.dateRange = [];
                         this.resetForm("queryForm");
                         this.handleQuery();
                       },
                       /** 根据角色ID查询菜单树结构 */
                           getRoleMenuTreeselect(roleId) {
                             return roleMenuTreeselect(roleId).then(response => {
                               this.menuOptions = response.menus;
                               return response;
                             });
                           },
                        // 多选框选中数据
                           handleSelectionChange(selection) {
                             this.ids = selection.map(item => item.roleId)
                             this.single = selection.length!=1
                             this.multiple = !selection.length
                           },
                            /** 修改按钮操作 */
                               handleUpdate(row) {
                                 this.reset();
                                 const roleId = row.roleId || this.ids
                                 const roleMenu = this.getRoleMenuTreeselect(roleId);
                                 getRole(roleId).then(response => {
                                   this.form = response.data;
                                   this.open = true;
                                   this.$nextTick(() => {
                                     roleMenu.then(res => {
                                       this.$refs.menu.setCheckedKeys(res.checkedKeys);
                                     });
                                   });
                                   this.title = "修改角色";
                                 });
                               },
                                /** 分配数据权限操作 */
                                   handleDataScope(row) {
                                     this.reset();
                                     const roleDeptTreeselect = this.getRoleDeptTreeselect(row.roleId);
                                     getRole(row.roleId).then(response => {
                                       this.form = response.data;
                                       this.openDataScope = true;
                                       this.$nextTick(() => {
                                         roleDeptTreeselect.then(res => {
                                           this.$refs.dept.setCheckedKeys(res.checkedKeys);
                                         });
                                       });
                                       this.title = "分配数据权限";
                                     });
                                   },
                                      /** 删除按钮操作 */
                                       handleDelete(row) {
                                         const roleIds = row.roleId || this.ids;
                                         this.$confirm('是否确认删除角色编号为"' + roleIds + '"的数据项?', "警告", {
                                             confirmButtonText: "确定",
                                             cancelButtonText: "取消",
                                             type: "warning"
                                           }).then(function() {
                                             return delRole(roleIds);
                                           }).then(() => {
                                             this.getList();
                                             this.msgSuccess("删除成功");
                                           }).catch(function() {});
                                       },
                    /** 导出按钮操作 */
                       handleExport() {
                         const queryParams = this.queryParams;
                         this.$confirm('是否确认导出所有角色数据项?', "警告", {
                             confirmButtonText: "确定",
                             cancelButtonText: "取消",
                             type: "warning"
                           }).then(function() {
                             return exportRole(queryParams);
                           }).then(response => {
                             this.download(response.msg);
                           }).catch(function() {});
                       }
		     },
	   }
</script>

<style scoped="scoped">
	.roleManagement_top {
		background-image: linear-gradient(#5692cf, #00356c);
		height: 40px;
		width: 100%;
		margin-top: -3px;
		padding: 5px;
	}

	.roleManagement_top ul li {
		float: left;
		line-height: 28px;
		color: white;
		border: 1px solid #5681af;
		font-size: 12px;
		height: 28px;
		width: 58px;
		text-align: center;
		border-radius: 5px;
		background-image: linear-gradient(#71a1d2, #174f89);
		cursor: pointer;
	}
	.roleManagement_conter {
		background-color: #FFFFFF;
		width: 100%;
		height: 850px;
		border: 1px solid #c0c0c0;
		display: flex;
	}
	/* 左侧 */
  .left {
  	width: 18%;
  	height: 100%;
  	background-color: #efefef;
  	font-size: 14px;
    border-right:1px solid #888888;
  }

  .left_top {
  	width: 100%;
  	height: 40%;
  }

  .message {
  	width: 100%;
  	height: 30px;
  	line-height: 30px;
  	font-size: 12px;
  	background-image: linear-gradient(#fdfdfe, #cfd0d1);
  	padding-left: 10px;
  	display: flex;
  	justify-content: space-between;
  	padding-right: 10px;

  }
  .messageli{

  }

  .messagenav{
  	color: #2a5b8c;
  	font-weight: 900;

  }
  /* 右侧 */
  .conter_right{
    width: 82%;
    height: 100%;
  }
  /* 右侧头部 */
  .rigtop{
  	width: 100%;
  	height: 24px;
  	line-height: 24px;
  	background-image: linear-gradient(#ffffff , #e5e5e5);
  	font-size: 12px;
  	color: #000000;
  }
</style>
<style>
	.input1 .el-input__inner {
		height: 20px;
		padding-left: 5px;

	}
</style>
